
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN COLON COMMA CTE_STRING DIV ELSE FLOAT FLOAT_TYPE GREATER_THAN ID IF INT INT_TYPE LBRACE LESS_GREAT LESS_THAN LPAREN MINUS MULT PLUS PRINT PROGRAM RBRACE RPAREN SEMICOLON VAR program : PROGRAM ID COLON vars bloque vars : VAR allVars\n        |allVars : nextId COLON tipo SEMICOLON nextVarnextId :  ID\n        | ID COMMA nextIdnextVar : allVars\n       | bloque : LBRACE nextStatuto RBRACE  nextStatuto : estatuto nextStatuto\n        | estatuto : assign\n       | condition\n       | print condition : IF LPAREN expresion RPAREN bloque elseBlock SEMICOLON  elseBlock : ELSE bloque\n       | assign : ID ASSIGN expresion SEMICOLON  print : LPAREN PRINT nextPrintExp nextPrint RPAREN SEMICOLON  nextPrintExp : expresion\n       | CTE_STRING nextPrint : COMMA nextPrintExp nextPrint\n        | tipo : INT_TYPE\n       | FLOAT_TYPEvarCte : ID\n       | INT\n       | FLOATfactor : LPAREN expresion RPAREN\n        | cteExp cteExp : varCte\n       | PLUS varCte\n       | MINUS varCte termino : nextFactor nextFactor : factor\n       | factor DIV termino\n       | factor MULT terminoexp : termino nextTerm nextTerm : PLUS termino nextTerm\n        | MINUS termino nextTerm\n        |expresion : nextExpnextExp : exp GREATER_THAN exp\n       | exp LESS_THAN exp\n       | exp LESS_GREAT exp\n       | exp'
    
_lr_action_items = {'FLOAT_TYPE':([20,],[28,]),'GREATER_THAN':([31,33,36,37,38,40,42,43,44,50,53,54,67,68,69,70,71,78,79,],[-41,-34,-30,-35,-31,-26,-27,-28,59,-38,-33,-32,-41,-41,-36,-37,-29,-39,-40,]),'PROGRAM':([0,],[2,]),'INT_TYPE':([20,],[29,]),'PRINT':([15,],[25,]),'LESS_THAN':([31,33,36,37,38,40,42,43,44,50,53,54,67,68,69,70,71,78,79,],[-41,-34,-30,-35,-31,-26,-27,-28,60,-38,-33,-32,-41,-41,-36,-37,-29,-39,-40,]),'MINUS':([24,25,26,31,33,36,37,38,39,40,42,43,51,52,53,54,55,56,59,60,61,63,67,68,69,70,71,],[32,32,32,52,-34,-30,-35,-31,32,-26,-27,-28,32,32,-33,-32,32,32,32,32,32,32,52,52,-36,-37,-29,]),'MULT':([36,37,38,40,42,43,53,54,71,],[-30,56,-31,-26,-27,-28,-33,-32,-29,]),'RPAREN':([31,33,34,36,37,38,40,42,43,44,45,46,47,48,50,53,54,57,62,67,68,69,70,71,72,73,74,76,78,79,81,],[-41,-34,-42,-30,-35,-31,-26,-27,-28,-46,-21,-23,-20,64,-38,-33,-32,71,75,-41,-41,-36,-37,-29,-43,-44,-45,-23,-39,-40,-22,]),'SEMICOLON':([22,27,28,29,31,33,34,36,37,38,40,41,42,43,44,50,53,54,67,68,69,70,71,72,73,74,75,77,78,79,82,85,],[-9,49,-25,-24,-41,-34,-42,-30,-35,-31,-26,58,-27,-28,-46,-38,-33,-32,-41,-41,-36,-37,-29,-43,-44,-45,80,-17,-39,-40,84,-16,]),'PLUS':([24,25,26,31,33,36,37,38,39,40,42,43,51,52,53,54,55,56,59,60,61,63,67,68,69,70,71,],[35,35,35,51,-34,-30,-35,-31,35,-26,-27,-28,35,35,-33,-32,35,35,35,35,35,35,51,51,-36,-37,-29,]),'COLON':([3,10,11,30,],[4,20,-5,-6,]),'LESS_GREAT':([31,33,36,37,38,40,42,43,44,50,53,54,67,68,69,70,71,78,79,],[-41,-34,-30,-35,-31,-26,-27,-28,61,-38,-33,-32,-41,-41,-36,-37,-29,-39,-40,]),'ASSIGN':([14,],[24,]),'$end':([1,8,22,],[0,-1,-9,]),'CTE_STRING':([25,63,],[45,45,]),'RBRACE':([7,12,13,16,17,18,23,58,80,84,],[-11,22,-11,-14,-12,-13,-10,-18,-19,-15,]),'ELSE':([22,77,],[-9,83,]),'LPAREN':([7,13,16,17,18,19,24,25,26,39,51,52,55,56,58,59,60,61,63,80,84,],[15,15,-14,-12,-13,26,39,39,39,39,39,39,39,39,-18,39,39,39,39,-19,-15,]),'VAR':([4,],[6,]),'ID':([2,6,7,13,16,17,18,21,24,25,26,32,35,39,49,51,52,55,56,58,59,60,61,63,80,84,],[3,11,14,14,-14,-12,-13,11,40,40,40,40,40,40,11,40,40,40,40,-18,40,40,40,40,-19,-15,]),'IF':([7,13,16,17,18,58,80,84,],[19,19,-14,-12,-13,-18,-19,-15,]),'LBRACE':([4,5,9,49,64,65,66,83,],[-3,7,-2,-8,7,-7,-4,7,]),'INT':([24,25,26,32,35,39,51,52,55,56,59,60,61,63,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'FLOAT':([24,25,26,32,35,39,51,52,55,56,59,60,61,63,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'COMMA':([11,31,33,34,36,37,38,40,42,43,44,45,46,47,50,53,54,67,68,69,70,71,72,73,74,76,78,79,],[21,-41,-34,-42,-30,-35,-31,-26,-27,-28,-46,-21,63,-20,-38,-33,-32,-41,-41,-36,-37,-29,-43,-44,-45,63,-39,-40,]),'DIV':([36,37,38,40,42,43,53,54,71,],[-30,55,-31,-26,-27,-28,-33,-32,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'estatuto':([7,13,],[13,13,]),'vars':([4,],[5,]),'allVars':([6,49,],[9,65,]),'elseBlock':([77,],[82,]),'termino':([24,25,26,39,51,52,55,56,59,60,61,63,],[31,31,31,31,67,68,69,70,31,31,31,31,]),'bloque':([5,64,83,],[8,77,85,]),'nextFactor':([24,25,26,39,51,52,55,56,59,60,61,63,],[33,33,33,33,33,33,33,33,33,33,33,33,]),'nextStatuto':([7,13,],[12,23,]),'nextExp':([24,25,26,39,63,],[34,34,34,34,34,]),'program':([0,],[1,]),'cteExp':([24,25,26,39,51,52,55,56,59,60,61,63,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'factor':([24,25,26,39,51,52,55,56,59,60,61,63,],[37,37,37,37,37,37,37,37,37,37,37,37,]),'print':([7,13,],[16,16,]),'varCte':([24,25,26,32,35,39,51,52,55,56,59,60,61,63,],[38,38,38,53,54,38,38,38,38,38,38,38,38,38,]),'nextPrint':([46,76,],[62,81,]),'nextTerm':([31,67,68,],[50,78,79,]),'nextPrintExp':([25,63,],[46,76,]),'nextVar':([49,],[66,]),'condition':([7,13,],[18,18,]),'expresion':([24,25,26,39,63,],[41,47,48,57,47,]),'tipo':([20,],[27,]),'exp':([24,25,26,39,59,60,61,63,],[44,44,44,44,72,73,74,44,]),'nextId':([6,21,49,],[10,30,10,]),'assign':([7,13,],[17,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID COLON vars bloque','program',5,'p_program','parser.py',9),
  ('vars -> VAR allVars','vars',2,'p_vars','parser.py',12),
  ('vars -> <empty>','vars',0,'p_vars','parser.py',13),
  ('allVars -> nextId COLON tipo SEMICOLON nextVar','allVars',5,'p_allVars','parser.py',17),
  ('nextId -> ID','nextId',1,'p_nextId','parser.py',21),
  ('nextId -> ID COMMA nextId','nextId',3,'p_nextId','parser.py',22),
  ('nextVar -> allVars','nextVar',1,'p_nextVar','parser.py',26),
  ('nextVar -> <empty>','nextVar',0,'p_nextVar','parser.py',27),
  ('bloque -> LBRACE nextStatuto RBRACE','bloque',3,'p_bloque','parser.py',31),
  ('nextStatuto -> estatuto nextStatuto','nextStatuto',2,'p_nextStatuto','parser.py',35),
  ('nextStatuto -> <empty>','nextStatuto',0,'p_nextStatuto','parser.py',36),
  ('estatuto -> assign','estatuto',1,'p_estatuto','parser.py',40),
  ('estatuto -> condition','estatuto',1,'p_estatuto','parser.py',41),
  ('estatuto -> print','estatuto',1,'p_estatuto','parser.py',42),
  ('condition -> IF LPAREN expresion RPAREN bloque elseBlock SEMICOLON','condition',7,'p_condition','parser.py',46),
  ('elseBlock -> ELSE bloque','elseBlock',2,'p_elseBlock','parser.py',50),
  ('elseBlock -> <empty>','elseBlock',0,'p_elseBlock','parser.py',51),
  ('assign -> ID ASSIGN expresion SEMICOLON','assign',4,'p_assign','parser.py',55),
  ('print -> LPAREN PRINT nextPrintExp nextPrint RPAREN SEMICOLON','print',6,'p_print','parser.py',59),
  ('nextPrintExp -> expresion','nextPrintExp',1,'p_nextPrintExp','parser.py',63),
  ('nextPrintExp -> CTE_STRING','nextPrintExp',1,'p_nextPrintExp','parser.py',64),
  ('nextPrint -> COMMA nextPrintExp nextPrint','nextPrint',3,'p_nextPrint','parser.py',68),
  ('nextPrint -> <empty>','nextPrint',0,'p_nextPrint','parser.py',69),
  ('tipo -> INT_TYPE','tipo',1,'p_tipo','parser.py',73),
  ('tipo -> FLOAT_TYPE','tipo',1,'p_tipo','parser.py',74),
  ('varCte -> ID','varCte',1,'p_varCte','parser.py',78),
  ('varCte -> INT','varCte',1,'p_varCte','parser.py',79),
  ('varCte -> FLOAT','varCte',1,'p_varCte','parser.py',80),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','parser.py',84),
  ('factor -> cteExp','factor',1,'p_factor','parser.py',85),
  ('cteExp -> varCte','cteExp',1,'p_cteExp','parser.py',89),
  ('cteExp -> PLUS varCte','cteExp',2,'p_cteExp','parser.py',90),
  ('cteExp -> MINUS varCte','cteExp',2,'p_cteExp','parser.py',91),
  ('termino -> nextFactor','termino',1,'p_termino','parser.py',95),
  ('nextFactor -> factor','nextFactor',1,'p_nextFactor','parser.py',99),
  ('nextFactor -> factor DIV termino','nextFactor',3,'p_nextFactor','parser.py',100),
  ('nextFactor -> factor MULT termino','nextFactor',3,'p_nextFactor','parser.py',101),
  ('exp -> termino nextTerm','exp',2,'p_exp','parser.py',105),
  ('nextTerm -> PLUS termino nextTerm','nextTerm',3,'p_nextTerm','parser.py',109),
  ('nextTerm -> MINUS termino nextTerm','nextTerm',3,'p_nextTerm','parser.py',110),
  ('nextTerm -> <empty>','nextTerm',0,'p_nextTerm','parser.py',111),
  ('expresion -> nextExp','expresion',1,'p_expresion','parser.py',117),
  ('nextExp -> exp GREATER_THAN exp','nextExp',3,'p_nextExp','parser.py',121),
  ('nextExp -> exp LESS_THAN exp','nextExp',3,'p_nextExp','parser.py',122),
  ('nextExp -> exp LESS_GREAT exp','nextExp',3,'p_nextExp','parser.py',123),
  ('nextExp -> exp','nextExp',1,'p_nextExp','parser.py',124),
]
